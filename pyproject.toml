[project]
name = "omnibase_spi"
version = "0.1.0"
description = "ONEX Service Provider Interface - Protocol definitions"
authors = [{name = "OmniNode Team", email = "team@omninode.ai"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions>=4.5.0",
    "pydantic>=2.11.7",
]

[tool.poetry]
packages = [{include = "omnibase_spi", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
mypy = "^1.13.0"
black = "^24.10.0"
isort = "^5.13.0"
pre-commit = "^4.0.0"
pytest = "^8.4.1"
pytest-asyncio = "^0.24.0"
hypothesis = "^6.88.0"
ruff = "^0.8.0"
requests = "^2.32.5"
types-requests = "^2.32.4.20250913"
pyyaml = "^6.0.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
exclude = [
    "tests/protocols/memory/test_memory_edge_cases.py",
]
